#!/bin/bash
#  >> Execute arbitrary command on all hosts  

# This code is licensed under the GNU General Public License (GPL) version 3 
# see doc/ for details 
# Copyright (c) 2008 by S.Chekanov (chakanau@hep.anl.gov). 
# All rights reserved.



"exec" "python" "-Wignore" "$0" "$@"


__version__ = 'Arcond 1.5 copy utils'
__author__  = 'Sergei Chekanov  (chakanau@hep.anl.gov)'
__doc__     = 'Jan. 2010. For details see doc and the ASC workbook'


# define here a command to execute
cmt = "df -k"
# cmt = "users"

# get list of computers from hosts.py
import hosts 
ascComputers=hosts.getHosts()


#################### do not modify ########################
import os
import re
import time
import sys
from threading import Thread


map={}

class testit(Thread):
   def __init__ (self,ip):
      Thread.__init__(self)
      self.ip = ip
      self.status = -1
   def run(self):
      pingaling = os.popen(" ssh " +self.ip + " "+cmt,"r")
      ss="\n";
      while 1:
        line = pingaling.readline()
        if not line: break
        ss=ss+line;
        map[self.ip]=ss; 
        igot = re.findall(testit.lifeline,line)
        if igot:
           self.status = int(igot[0])

testit.lifeline = re.compile(r"(\d) received")
report = ("No response","Partial Response"," Welcome","ATLAS","Checking","No route to host")

print time.ctime()

pinglist = []
for host in ascComputers:
   current = testit(host)
   pinglist.append(current)
   current.start()
 
for pingle in pinglist:
   pingle.join()
   print "Status from ",pingle.ip,"is",report[pingle.status]
    
print time.ctime()

print ""
print "-- Computers alive: "
for lang in map.keys(): 
     print lang, '\t', map[lang]
 

